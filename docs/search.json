[{"path":"/articles/predicttornado-vignette.html","id":"data-tornado","dir":"Articles","previous_headings":"","what":"Data: tornado","title":"predicttornado-vignette","text":"explore functions predicttornado package, use tornados.csv can found . tornado_data contains variety features related tornadoes, magnitude, width tornadoes, length tornadoes, number fatalities casualities, financial loss. can see many redundant features, like date yr f1, f2, f3, f4. also missing values certain features, like mag. want remove features rows missing data, want preprocessing data. process_data function comes play. data processed can see certain features redundant removed, date time. also removed certain features don’t need, like loss. Moreover, can also see names certain features changed make informative. example, len changed length fat changed fatalities. can also see missing values removed. Next, data processing, want perform exploratory data analysis visualizing certain features interest. Let’s say interested see width related fatalities. can visualize relationship using function create_scatterplot.  One interesting thing can explore whether data skewed outliers. , can use function boxplot_viz examine whether feature interest, fatalities, outliers.  boxplot shows us outliers data fatalities. sake demonstration, removing outliers. However, reality, data analysis, may want remove outliers. depend decisions make data analysis project. scatterplot, can see correlation width injuries. However, correlation seem strong. Despite small correlation, create linear regression model using width predictor injuries target. , can use function fit_linear_model. Note: proper data analysis, want first split data train test data fit model train data score test data. documentation, simply showing use functions predicttornado. Finally, fitting model, want compare accuracy regression model actual number fatalities.  red line can tell us well model predicting actual number fatalities. Based accuracy plot, can see model performing well. document, explored functions predicttornado. set perform data analysis package.","code":"tornado_data <- read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/a9e277dd77331e9091e151bb5adb584742064b3e/data/2023/2023-05-16/tornados.csv\") #> Rows: 68693 Columns: 27 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr   (2): tz, st #> dbl  (21): om, yr, mo, dy, stf, mag, inj, fat, loss, slat, slon, elat, elon,... #> lgl   (1): fc #> dttm  (1): datetime_utc #> date  (1): date #> time  (1): time #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. sapply(tornado_data, function(x) sum(is.na(x))) #>           om           yr           mo           dy         date         time  #>            0            0            0            0            0            0  #>           tz datetime_utc           st          stf          mag          inj  #>            0            0            0            0          756            0  #>          fat         loss         slat         slon         elat         elon  #>            0        27170            0            0            0            0  #>          len          wid           ns           sn           f1           f2  #>            0            0            0            0            0            0  #>           f3           f4           fc  #>            0            0            0 clean_data <- process_data(tornado_data) clean_data #> # A tibble: 67,937 × 17 #>       ID  year month   day time   datetime_utc        state   mag injuries #>    <dbl> <dbl> <dbl> <dbl> <time> <dttm>              <chr> <dbl>    <dbl> #>  1   192  1950    10     1 21:00  1950-10-02 03:00:00 OK        1        0 #>  2   193  1950    10     9 02:15  1950-10-09 08:15:00 NC        3        3 #>  3   195  1950    11    20 02:20  1950-11-20 08:20:00 KY        2        0 #>  4   196  1950    11    20 04:00  1950-11-20 10:00:00 KY        1        0 #>  5   197  1950    11    20 07:30  1950-11-20 13:30:00 MS        1        3 #>  6   194  1950    11     4 17:00  1950-11-04 23:00:00 PA        3        1 #>  7   198  1950    12     2 15:00  1950-12-02 21:00:00 IL        2        3 #>  8   199  1950    12     2 16:00  1950-12-02 22:00:00 IL        3       25 #>  9   200  1950    12     2 16:25  1950-12-02 22:25:00 AR        3        0 #> 10   201  1950    12     2 17:30  1950-12-02 23:30:00 IL        1        0 #> # ℹ 67,927 more rows #> # ℹ 8 more variables: fatalities <dbl>, start_lat <dbl>, start_lon <dbl>, #> #   end_lat <dbl>, end_lon <dbl>, length <dbl>, width <dbl>, ns <dbl> sapply(clean_data, function(x) sum(is.na(x))) #>           ID         year        month          day         time datetime_utc  #>            0            0            0            0            0            0  #>        state          mag     injuries   fatalities    start_lat    start_lon  #>            0            0            0            0            0            0  #>      end_lat      end_lon       length        width           ns  #>            0            0            0            0            0 width_fatalities_scatterplot <- create_scatterplot(clean_data, width, fatalities) +  ggplot2::labs(x = \"Width of tornadoes (yards)\", y = \"Fatalities\",  title = \"Figure 2: Scatterplot of width (yards) of tornado and fatalities\") width_fatalities_scatterplot boxplot_data <- boxplot_viz(clean_data, fatalities) boxplot_data lm_fit <- fit_linear_model(injuries ~ width, clean_data) lm_fit #> ══ Workflow [trained] ══════════════════════════════════════════════════════════ #> Preprocessor: Recipe #> Model: linear_reg() #>  #> ── Preprocessor ──────────────────────────────────────────────────────────────── #> 0 Recipe Steps #>  #> ── Model ─────────────────────────────────────────────────────────────────────── #>  #> Call: #> stats::lm(formula = ..y ~ ., data = data) #>  #> Coefficients: #> (Intercept)        width   #>    -0.32710      0.01625 fatal_predictions <- lm_fit |>     predict(clean_data) |>     bind_cols(clean_data)  fatal_model <- accuracy_plot(fatal_predictions, fatalities) +     xlab(\"Actual Number of Fatalities\") +     ylab(\"Predicted Number of Fatalities\") +     ggtitle(\"Actual Number of Fatalities vs Predicted Number of Fatalities\") fatal_model #> Warning in ggplot2::scale_x_continuous(trans = \"log10\"): log-10 #> transformation introduced infinite values."},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"First Last. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Last F (2024). predicttornado: Help Tornado Analysis. R package version 0.0.0.9000.","code":"@Manual{,   title = {predicttornado: Help Tornado Analysis},   author = {First Last},   year = {2024},   note = {R package version 0.0.0.9000}, }"},{"path":"/index.html","id":"predicttornado","dir":"","previous_headings":"","what":"Help Tornado Analysis","title":"Help Tornado Analysis","text":"goal predicttornado provide functions help data analysis predicting number fatalities using length width tornadoes based tornado data.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Help Tornado Analysis","text":"can install development version predicttornado like :","code":"# install.packages(\"devtools\") devtools::install_github(\"DSCI-310-2024/predicttornado\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Help Tornado Analysis","text":"Refer vignettes view examples use package functions. basic example shows load package use one functions, process_data, processes cleans data using data analysis. package can also used create visualizations like scatterplots using create_scatterplotand boxplots using boxplot_viz.   can easily create linear regression model fit data function fit_linear_model:","code":"raw_df <- data.frame(   om = c(156, 189, 26),    yr = c(1950, 1951, 1952),    mo = c(10, 11, 12),    dy = c(1, 9, 20),    date = as.Date(c(\"2021-03-26\", \"2022-03-26\", \"2024-03-01\")),   time = as.POSIXct(c(\"12:00:00\", \"13:00:00\", \"21:00:00\"), format = \"%H:%M:%S\"),   tz = c(\"America/Chicago\", \"America/Chicago\", \"America/Chicago\"),   datetime_utc = as.POSIXct(c(\"2021-03-26 12:00:00\", \"2022-03-26 13:00:00\", \"2024-03-01 21:00:00\")),   st = c(\"OK\", \"NC\", \"TX\"),   stf = c(0, 0, 0),    mag = c(0, 0, NA),    inj = c(23, 233, 405),    fat = c(45, 190, 201),    loss = c(23, 40, 56),    slat = c(0, 0, 0),    slon = c(0, 0, 0),    elat = c(0, 0, 0),    elon = c(0, -50, -60),    len = c(201, 340, 100),    wid = c(34, 57, 71),    ns = c(0, 0, NA),    sn = c(0, 0, 0),    f1 = c(0, 0, 0),    f2 = c(0, 0, 0),    f3 = c(0, 0, NA),    f4 = c(0, 0, 0),    fc = c(FALSE, FALSE, TRUE) ) library(magrittr) library(predicttornado)  tornado_df <- process_data(raw_df) create_scatterplot(tornado_df, width, fatalities) +  ggplot2::labs(x = \"Width of tornadoes (yards)\", y = \"Fatalities\",  title = \"Figure 2: Scatterplot of width (yards) of tornado and fatalities\") boxplot_viz(tornado_df, fatalities) lm_data <- fit_linear_model(fatalities ~ width + length, tornado_df) |>     predict(tornado_df) |>     dplyr::bind_cols(tornado_df) #> Warning in predict.lm(object = object$fit, newdata = new_data, type = #> \"response\", : prediction from rank-deficient fit; consider predict(., #> rankdeficient=\"NA\")"},{"path":"/index.html","id":"predicttornado-in-the-r-package-ecosystem","dir":"","previous_headings":"","what":"predicttornado in the R package ecosystem","title":"Help Tornado Analysis","text":"predicttornado may seem like package similar R packages. example, three visualization functions resemble ggplot2. However, slightly different tailored data analysis project. create_scatterplotand boxplot_viz specific visualization size settings title aesthetics render visualizations pleasing. Moreover, accuracy_plot different even though uses ggplot2 functions, creates scatterplot compares accuracy linear regression model actual observations. process_data also different dplyr’s select filter combines different functions create efficient data processing function ease data analysis. Additionally, specific processing function analysis tornado data predicting fatalities. Lastly, fit_linear_model also different linear regression functions lm stats example combines multiple steps required creating fitting linear regression model automatically outputs model coefficient intercept.","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 predicttornado authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/reference/accuracy_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a scatter plot — accuracy_plot","title":"Creates a scatter plot — accuracy_plot","text":"Creates scatter plot provided data comparing accuracy regression model actual observations","code":""},{"path":"/reference/accuracy_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a scatter plot — accuracy_plot","text":"","code":"accuracy_plot(predictions, pred_var)"},{"path":"/reference/accuracy_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a scatter plot — accuracy_plot","text":"predictions dataframe containing predictions linear model fit pred_var unquoted column name","code":""},{"path":"/reference/accuracy_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a scatter plot — accuracy_plot","text":"scatter plot two numerical features","code":""},{"path":"/reference/accuracy_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a scatter plot — accuracy_plot","text":"","code":"accuracy_plot(fatal_predictions, fatalities) + labs(x = \"Actual Number of Fatalities\", y = \"Predicted Number of Fatalities\") #> Error in eval(expr, envir, enclos): object 'fatal_predictions' not found"},{"path":"/reference/boxplot_viz.html","id":null,"dir":"Reference","previous_headings":"","what":"Boxplot Viz — boxplot_viz","title":"Boxplot Viz — boxplot_viz","text":"Creates boxplot visualization specified column.","code":""},{"path":"/reference/boxplot_viz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boxplot Viz — boxplot_viz","text":"","code":"boxplot_viz(data_frame, col)"},{"path":"/reference/boxplot_viz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boxplot Viz — boxplot_viz","text":"data_frame data frame data frame extension col unquoted column name data frame","code":""},{"path":"/reference/boxplot_viz.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Boxplot Viz — boxplot_viz","text":"boxplot single variable interest","code":""},{"path":"/reference/boxplot_viz.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Boxplot Viz — boxplot_viz","text":"","code":"boxplot_viz(test_data, fatalities) #> Error in eval(expr, envir, enclos): object 'test_data' not found"},{"path":"/reference/create_scatterplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a scatter plot — create_scatterplot","title":"Creates a scatter plot — create_scatterplot","text":"Creates scatter plot provided data specified two numerical columns","code":""},{"path":"/reference/create_scatterplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a scatter plot — create_scatterplot","text":"","code":"create_scatterplot(data, x_col, y_col)"},{"path":"/reference/create_scatterplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a scatter plot — create_scatterplot","text":"data data frame tibble x_col unquoted column name plot x-axis data y_col unquoted column name plot y-axis data","code":""},{"path":"/reference/create_scatterplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a scatter plot — create_scatterplot","text":"scatter plot two numerical features","code":""},{"path":"/reference/create_scatterplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a scatter plot — create_scatterplot","text":"","code":"create_scatterplot(tornado_train_data, width, fatalities) +  labs(x = \"Width of tornadoes (yards)\", y = \"Fatalities\",  title = \"Figure 2: Scatterplot of width (yards) of tornado and fatalities\") #> Error in eval(expr, envir, enclos): object 'tornado_train_data' not found"},{"path":"/reference/fit_linear_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Linear Model — fit_linear_model","title":"Fit Linear Model — fit_linear_model","text":"Creates fits linear model training data linear regression.","code":""},{"path":"/reference/fit_linear_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Linear Model — fit_linear_model","text":"","code":"fit_linear_model(formula, data)"},{"path":"/reference/fit_linear_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Linear Model — fit_linear_model","text":"formula model formula. data training data.","code":""},{"path":"/reference/fit_linear_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit Linear Model — fit_linear_model","text":"fitted model workflow object.","code":""},{"path":"/reference/fit_linear_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Linear Model — fit_linear_model","text":"","code":"fit_linear_model(fatalities ~ width + length, train_data) #> Error in eval(expr, envir, enclos): object 'train_data' not found"},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"/reference/process_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Data — process_data","title":"Process Data — process_data","text":"Removes NA values mag variable repetitive/irrelevant columns data frame; renames column names order given original columns dataset correct order: ID, year, month, day, time, datetime_utc, state, mag, injuries, fatalities, start_lat, start_lon, end_lat, end_lon, length, width, ns","code":""},{"path":"/reference/process_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Data — process_data","text":"","code":"process_data(data_frame)"},{"path":"/reference/process_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process Data — process_data","text":"data_frame data frame data frame extension","code":""},{"path":"/reference/process_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process Data — process_data","text":"data frame NA values. Column names order left right: ID, year, month, day, time, datetime_utc, state, mag, injuries, fatalities, start_lat, start_lon, end_lat, end_lon, length, width, ns","code":""},{"path":"/reference/process_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process Data — process_data","text":"","code":"process_data(raw_data) #> Error in eval(expr, envir, enclos): object 'raw_data' not found"}]
